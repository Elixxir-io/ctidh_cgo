//go:build bits2048
// +build bits2048

package ctidh

import (
	"encoding/hex"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestPython2048BitVectors(t *testing.T) {

	// Alice
	alicePrivateKeyHex := "00010000000000000000000000ff000000ffff02ff00000000000000ff000000020000fe01000000000000000001ff0000010000000000ff00000000ff00000100ff0000ff00000001000001000000010000010000000000ff000000ff000001000000000001ff00010000000000ff00000001000000ff0000000000030000ffffff00000000000000000001ff00ff000000000000010100000000ff000000000000ff00020000000000000000ff00000001000000ffff0000000000ff000000000000000100000101000000ff00000000000000000000000000000000ff000000000001000000"
	alicePrivateKeyBytes, err := hex.DecodeString(alicePrivateKeyHex)
	require.NoError(t, err)
	alicePrivateKey := new(PrivateKey)
	alicePrivateKey.FromBytes(alicePrivateKeyBytes)

	alicePublicKeyHex := "b2af3db1d3070879a0a0f4dbabd8c4d4e44536ad3caa22a1e212fffaa9886611b09904ba5e2d889e7aa54186d9b134e01a06da93f5c61b5c035a3d738388a121e3b6774f298fedaca36edfc4f1c5c10153ad40fa8a116f9668189bbbae25c09d42d34703756076e3326c6302dade803bbcdbb6a66650bf3115c72b40d9e71eca2309298a5b2c0469d62c1fa46a956287617395e04e7e3842f71e060ca73738461bb30f2ca3329c2c8bbdce4b4f4b47ef3c851799144003cab417d55988ddbe23920fd92692d00eb3aa1e63d04651ca4e10a885c7af948ebf93dae875152ca10a47feb67d79c7536c941122996a5d81e8ed3306056b2c31048edd3e8bbfa28c38"
	alicePublicKeyBytes, err := hex.DecodeString(alicePublicKeyHex)
	alicePublicKey := new(PublicKey)
	err = alicePublicKey.FromBytes(alicePublicKeyBytes)
	require.NoError(t, err)

	// Bob
	bobPrivateKeyHex := "0000000100000000000000ff00000100ff000000000000000001fe0000010000020000010000ff00000000000100010001000000ff00000100000000ff000000000000000000ffff00000000000000000000ff00fe0000000000ff00000100000000ff000001000000ff00ff000000000000010002000000ff00000001ff0000ff00ff00000000000000000001000000000100000100000001000000ff0000ff010000000000000101ff0000000000000100000100000001000000ff00000000000000010000ff0000ff00000000000000010000000000000000000000000000ff000000010000"
	bobPrivateKeyBytes, err := hex.DecodeString(bobPrivateKeyHex)
	require.NoError(t, err)
	bobPrivateKey := new(PrivateKey)
	bobPrivateKey.FromBytes(bobPrivateKeyBytes)

	bobPublicKeyHex := "135d73849ad45f7e14134b5b550e9700923cdd2f2c6eba69a6a34317120c0fcba202b171924ff08eaa6b0c7635b457e9d5e3ce2a09ea562704166d59ca57fb3ae8046a0aa330c60978add40ea6e3c386c4ca3c7b33ef02f8aec3f166c31949e93a30e665c971588faa4eb4ef07f3143fb6c0efd4f7264f1dde8fdb6d277657b2129439b7f01aba57b82efa2c2fe12a637b99a5f974ae08c3ae24a2f70eff86947dbde7f7624b082143ea3e4864afbb3d1a40af0f2e1acc09eb07922d05f99072fdd534f3d96edd09dc642cbc452345a49d0f30b515078a76696bed53c175b436c58bbcfb95893b99f252896bb3d29bb711d401a89969aeaf7b88409c76b4e834"
	bobPublicKeyBytes, err := hex.DecodeString(bobPublicKeyHex)
	bobPublicKey := new(PublicKey)
	err = bobPublicKey.FromBytes(bobPublicKeyBytes)
	require.NoError(t, err)

	// NIKE
	bobSharedBytes, err := DeriveSecret(bobPrivateKey, alicePublicKey)
	require.NoError(t, err)

	aliceSharedBytes, err := DeriveSecret(alicePrivateKey, bobPublicKey)
	require.NoError(t, err)
	require.Equal(t, bobSharedBytes, aliceSharedBytes)

	sharedSecretHex := "f61ebdb51cff8de704e1940b702b7359f3936f632b9ac33a18d9f58f85153875e14fdc701912cc8717f0cb4c32729bc5eb9dbfc9ef207281103ae381f2ba0553686cbc43c279d1da8897e5fbab50e2a05e38ef7b012a85b856ebb3c1ebd133dc32f710dd6d67f80093b37402e5581f350f09188ac97b2ea7a14fbaa3c5db0bb38036ac2e81e34f1a04fae0fd91b90b3bca1fa3ae5b5bd37e0edebf08d806eb4cd9ab136289c9e86aba3f8839fabec86ae0cdbd794409a6b6f81b3a5c5f9f56da5e9bdeaf8f6d802be6f987ab5772f35b3855291c9ab3b1848d654841a24e014f7a112cf7591d16bf1d33b2d46e4294fca42cacb1c2eacdbe9040ab794906353f"
	sharedSecretBytes, err := hex.DecodeString(sharedSecretHex)
	require.NoError(t, err)

	require.Equal(t, sharedSecretBytes, aliceSharedBytes)
}
